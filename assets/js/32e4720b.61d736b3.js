(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{119:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return p}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(r),d=n,p=b["".concat(s,".").concat(d)]||b[d]||h[d]||o;return r?a.a.createElement(p,i(i({ref:t},c),{},{components:r})):a.a.createElement(p,i({ref:t},c))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},120:function(e,t,r){"use strict";function n(e){var t,r,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(r=n(e[t]))&&(a&&(a+=" "),a+=r);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,r=0,a="";r<arguments.length;)(e=arguments[r++])&&(t=n(e))&&(a&&(a+=" "),a+=t);return a}},122:function(e,t,r){"use strict";var n=r(0),a=r(123);t.a=function(){var e=Object(n.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},123:function(e,t,r){"use strict";var n=r(0),a=Object(n.createContext)(void 0);t.a=a},124:function(e,t,r){"use strict";var n=r(0),a=r.n(n),o=r(122),s=r(120),i=r(56),l=r.n(i);var c=37,u=39;t.a=function(e){var t=e.lazy,r=e.block,i=e.defaultValue,b=e.values,h=e.groupId,d=e.className,p=Object(o.a)(),f=p.tabGroupChoices,m=p.setTabGroupChoices,y=Object(n.useState)(i),v=y[0],w=y[1],O=n.Children.toArray(e.children),g=[];if(null!=h){var j=f[h];null!=j&&j!==v&&b.some((function(e){return e.value===j}))&&w(j)}var k=function(e){var t=e.target,r=g.indexOf(t),n=O[r].props.value;w(n),null!=h&&(m(h,n),setTimeout((function(){var e,r,n,a,o,s,i,c;(e=t.getBoundingClientRect(),r=e.top,n=e.left,a=e.bottom,o=e.right,s=window,i=s.innerHeight,c=s.innerWidth,r>=0&&o<=c&&a<=i&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l.a.tabItemActive),setTimeout((function(){return t.classList.remove(l.a.tabItemActive)}),2e3))}),150))},T=function(e){var t,r;switch(e.keyCode){case u:var n=g.indexOf(e.target)+1;r=g[n]||g[0];break;case c:var a=g.indexOf(e.target)-1;r=g[a]||g[g.length-1]}null===(t=r)||void 0===t||t.focus()};return a.a.createElement("div",{className:"tabs-container"},a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":r},d)},b.map((function(e){var t=e.value,r=e.label;return a.a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:Object(s.a)("tabs__item",l.a.tabItem,{"tabs__item--active":v===t}),key:t,ref:function(e){return g.push(e)},onKeyDown:T,onFocus:k,onClick:k},r)}))),t?Object(n.cloneElement)(O.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},O.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},125:function(e,t,r){"use strict";var n=r(0),a=r.n(n);t.a=function(e){var t=e.children,r=e.hidden,n=e.className;return a.a.createElement("div",{role:"tabpanel",hidden:r,className:n},t)}},80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return u})),r.d(t,"default",(function(){return h}));var n=r(3),a=r(7),o=(r(0),r(119)),s=r(124),i=r(125),l={title:"quick start"},c={unversionedId:"flashbots-core/searchers/quick-start",id:"flashbots-core/searchers/quick-start",isDocsHomePage:!1,title:"quick start",description:"This quickstart guide contains all the information necessary to get up and running as a searcher on Flashbots Core. If you have any questions, do not hesitate to ask in the #searchers discord channel.",source:"@site/docs/flashbots-core/searchers/quick-start.md",slug:"/flashbots-core/searchers/quick-start",permalink:"/flashbots-core/searchers/quick-start",version:"current",sidebar:"docs",previous:{title:"overview",permalink:"/flashbots-core/overview"},next:{title:"FAQ",permalink:"/flashbots-core/searchers/faq"}},u=[{value:"Who should use Flashbots Core?",id:"who-should-use-flashbots-core",children:[]},{value:"How does Flashbots work for searchers?",id:"how-does-flashbots-work-for-searchers",children:[]},{value:"How to send your first Flashbots bundle",id:"how-to-send-your-first-flashbots-bundle",children:[]},{value:"Next steps",id:"next-steps",children:[]}],b={toc:u};function h(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This quickstart guide contains all the information necessary to get up and running as a searcher on Flashbots Core. If you have any questions, do not hesitate to ask in the ",Object(o.b)("a",{parentName:"p",href:"https://discord.gg/GezzK33W"},"#searchers discord channel"),"."),Object(o.b)("p",null,"See you on-chain! \u26a1\ud83e\udd16"),Object(o.b)("h3",{id:"who-should-use-flashbots-core"},"Who should use Flashbots Core?"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},'Ethereum bot operators (we call them "searchers") looking for fast, and risk free access to blockspace (for example, arbitrage and liquidation bots)'),Object(o.b)("li",{parentName:"ol"},"Ethereum users looking for frontrunning protection on their transactions (for example, Uniswap traders)"),Object(o.b)("li",{parentName:"ol"},"Ethereum Dapps with advanced use cases like account abstraction or gasless transactions (for example, tornado.cash and mistX)")),Object(o.b)("h3",{id:"how-does-flashbots-work-for-searchers"},"How does Flashbots work for searchers?"),Object(o.b)("p",null,"Flashbots connects searchers directly to miners and allows them to avoid the public tx pool. Searchers with transactions they would like to send miners first craft what we call \"bundles\" and send these to Flashbots' MEV-Relay. MEV-Relay is a gateway that Flashbots runs today which simulates searchers' bundles, and if there are no errors then forwards them on to miners. Miners then receive bundles and include them in blocks if it is profitable for them to do so."),Object(o.b)("p",null,"Getting onboarded to Flashbots is easy for searchers; you simply need to update how you send transactions."),Object(o.b)("h3",{id:"how-to-send-your-first-flashbots-bundle"},"How to send your first Flashbots bundle"),Object(o.b)("p",null,"To access the Flashbots network you will need three things:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"A private key that Flashbots can use to identify you"),Object(o.b)("li",{parentName:"ol"},"A way to interact with the Flashbots network"),Object(o.b)("li",{parentName:"ol"},'A "bundle" for your transactions')),Object(o.b)("p",null,"Let's begin with the private key Flashbots uses for identity. When you send bundles to Flashbots you will sign them with a private key so that we can establish identity for searchers and establish reputation for them over time. This private key ",Object(o.b)("strong",{parentName:"p"},"does not")," store funds and is ",Object(o.b)("strong",{parentName:"p"},"not")," the primary private key you use for executing transactions. Again, it is only used for identity, and it can be any private key."),Object(o.b)("p",null,"Second, you'll need a way to interact with Flashbots. Flashbots runs a relay you will send bundles to at ",Object(o.b)("inlineCode",{parentName:"p"},"relay.flashbots.net"),", and we have specific RPC endpoints you'll need to use to send us transactions. We've integrated with a few popular developer tools like Ethers.js or web3.py to make interacting with MEV-Relay as easy as possible. Here are a few examples of how to set up a Flashbots provider:"),Object(o.b)(s.a,{defaultValue:"ethers.js",values:[{label:"ethers.js",value:"ethers.js"},{label:"web3.py",value:"web3.py"},{label:"go",value:"go"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"ethers.js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"const ethers = require('ethers.js')\nconst { FlashbotsBundleProvider} = require('@flashbots/ethers-provider-bundle')\nconst provider = new ethers.providers.JsonRpcProvider({ url: ETHEREUM_RPC_URL })\n// Standard json rpc provider directly from ethers.js. For example you can use Infura, Alchemy, or your own node.\n\nconst authSigner = new ethers.Wallet('0x0000000000000000000000000000000000000000000000000000000000000000')\n// `authSigner` is an Ethereum private key that does NOT store funds and is NOT your bot's primary key.\n// This is an identifying key for signing payloads to establish reputation and whitelisting\n\nconst flashbotsProvider = await FlashbotsBundleProvider.create(provider, authSigner)\n// Flashbots provider requires passing in a standard provider and an auth signer\n"))),Object(o.b)(i.a,{value:"web3.py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},'from eth_account.signers.local import LocalAccount\nfrom web3 import Web3, HTTPProvider\nfrom flashbots import flashbot\nfrom eth_account.account import Account\nimport os\n\nw3 = Web3(HTTPProvider("http://localhost:8545"))\n# Create a web3 object with a standard json rpc provider, such as Infura, Alchemy, or your own node.\n\nETH_ACCOUNT_SIGNATURE: LocalAccount = Account.from_key(os.environ.get("ETH_SIGNATURE_KEY"))\n# ETH_ACCOUNT_SIGNATURE is an Ethereum private key that does NOT store funds and is NOT your bot\'s primary key.\n# This is an identifying key for signing payloads to establish reputation and whitelisting\n\nflashbot(w3, ETH_ACCOUNT_SIGNATURE)\n# Flashbots providers require both a standard provider and ETH_ACCOUNT_SIGNATURE (to establish reputation)\n'))),Object(o.b)(i.a,{value:"go",mdxType:"TabItem"},"An example can be found here: https://hyegar.com/posts/flashbots-rpc/")),Object(o.b)("p",null,"Now that we have a private key to identify ourselves with and a Flashbots provider we can create and send a bundle. Here's an example in node.js"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const ethers = require('ethers.js')\nconst { FlashbotsBundleProvider} = require('@flashbots/ethers-provider-bundle')\nconst provider = new ethers.providers.JsonRpcProvider({ url: ETHEREUM_RPC_URL })\n\nconst authSigner = new ethers.Wallet('0x2000000000000000000000000000000000000000000000000000000000000000')\nconst flashbotsProvider = await FlashbotsBundleProvider.create(provider, authSigner)\n\nconst signedBundle = await flashbotsProvider.signBundle([\n            {\n                signer: SOME_SIGNER_TO_SEND_FROM,\n                transaction: SOME_TRANSACTION_TO_SEND\n            }\n        ])\n\nconst bundleReceipt = await flashbotsProvider.sendRawBundle(signedBundle, TARGET_BLOCK_NUMBER)\n")),Object(o.b)("p",null,"That's it!"),Object(o.b)("h3",{id:"next-steps"},"Next steps"),Object(o.b)("p",null,"Congrats! You should now have everything you need to start sending transactions to the Flashbots network."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If you are looking to interact with the Flashbots Relay without using one of the libraries, check out the ",Object(o.b)("a",{parentName:"li",href:"/flashbots-core/searchers/advanced/rpc-endpoint"},"RPC endpoint documentation")," and other advanced concepts."),Object(o.b)("li",{parentName:"ul"},"For examples of advanced usage of Flashbots, check out the ",Object(o.b)("a",{parentName:"li",href:"/flashbots-core/searchers/example-searchers/simple-arbitrage-bot"},"example searchers")),Object(o.b)("li",{parentName:"ul"},"For additional tools, check out the ",Object(o.b)("a",{parentName:"li",href:"/flashbots-core/searchers/libraries/ethers-js-provider"},"searcher libraries"))))}h.isMDXComponent=!0}}]);